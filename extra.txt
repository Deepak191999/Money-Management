{{!-- function showOptions() {
            var type = document.getElementById("type").value;
            var creditOptions = document.getElementById("creditOptions");
            var debitOptions = document.getElementById("debitOptions");

            if (type === "credit") {
                creditOptions.style.display = "block";
                debitOptions.style.display = "none";
            } else if (type === "debit") {
                creditOptions.style.display = "none";
                debitOptions.style.display = "block";
            }
        } --}}
        ====
                let formData= document.getElementById("transactionForm");
        formData.addEventListener('submit',(e) => {
            //e.preventDefault();

             let amount = document.getElementById("amount").value;
            let type = document.getElementById("type").value;
            let category = type === "credit" ? document.getElementById("creditCategory").value : document.getElementById("debitCategory").value;
            let description = document.getElementById("description").value;
            let date = document.getElementById("date").value;

                if (!amount || !type || !category || !description || !date) {
                    console.error("All fields are required.");
                    return;
                    }
            // Log the form data to the console
            console.log("Amount:", amount);
            
            console.log("Type:", type);
            console.log("Category:", category);
            console.log("Description:", description);
            console.log("Date:", date);

            formData.reset();
        })


        ---------------------------
        <h2>Trasaction bar page</h2>

    <div class="circular-progress" data-inner-circle-color="lightgrey" data-percentage="80" data-progress-color="crimson" data-bg-color="black">
  <div class="inner-circle"></div>
  <p class="percentage">0%</p>
</div>




<script>
    const circularProgress = document.querySelectorAll(".circular-progress");

Array.from(circularProgress).forEach((progressBar) => {
  const progressValue = progressBar.querySelector(".percentage");
  const innerCircle = progressBar.querySelector(".inner-circle");
  let startValue = 0,
    endValue = Number(progressBar.getAttribute("data-percentage")),
    speed = 50,
    progressColor = progressBar.getAttribute("data-progress-color");

  const progress = setInterval(() => {
    startValue++;
    progressValue.textContent = `${startValue}%`;
    progressValue.style.color = `${progressColor}`;

    innerCircle.style.backgroundColor = `${progressBar.getAttribute(
      "data-inner-circle-color"
    )}`;

    progressBar.style.background = `conic-gradient(${progressColor} ${
      startValue * 3.6
    }deg,${progressBar.getAttribute("data-bg-color")} 0deg)`;
    if (startValue === endValue) {
      clearInterval(progress);
    }
  }, speed);
});
</script>
</body>
</html>




<script>
    document.addEventListener("DOMContentLoaded", function() {
            const creditProgress = document.querySelector(".credit-progress");
            const debitProgress = document.querySelector(".debit-progress");

            const createCircularProgress = (progressBar, totalAmount, progressColor, totalTurnover) => {
                const progressValue = progressBar.querySelector(".percentage");
                const innerCircle = progressBar.querySelector(".inner-circle");

                let percentage = 0;
                if (totalTurnover > 0) {
                    percentage = (totalAmount / totalTurnover) * 100; // Calculate percentage of total turnover
                }

                let startValue = 0,
                    endValue = Math.round(percentage),
                    speed = 10; // Decreased speed value to make the progress bar load faster

                const progress = setInterval(() => {
                    startValue++;
                    progressValue.textContent = `${startValue}%`;
                    progressValue.style.color = `${progressColor}`;
                    innerCircle.style.backgroundColor = `lightgrey`;
                    progressBar.style.background = `conic-gradient(${progressColor} ${startValue * 3.6}deg, ${progressBar.getAttribute("data-bg-color")} 0deg)`;
                    if (startValue === endValue) {
                        clearInterval(progress);
                    }
                }, speed);
            };

            const totalTurnover = {{totalCredit}} + {{totalDebit}};
            createCircularProgress(creditProgress, {{totalCredit}}, "green", totalTurnover);
            createCircularProgress(debitProgress, {{totalDebit}}, "red", totalTurnover);
    })
  </script>